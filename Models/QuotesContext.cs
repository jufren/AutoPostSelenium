// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace WinFormsApp1.Models
{
    public partial class QuotesContext : DbContext
    {
        public QuotesContext()
        {
        }

        public QuotesContext(DbContextOptions<QuotesContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Genres> Genres { get; set; }
        public virtual DbSet<Post> Post { get; set; }
        public virtual DbSet<Quotes> Quotes { get; set; }
        public virtual DbSet<Stories> Stories { get; set; }
        public virtual DbSet<ChineseVocabulary> ChineseVocabulary { get; set; }
        public virtual DbSet<ChinesePost> ChinesePost { get; set; }
        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            optionsBuilder.UseSqlServer(@"Server=.\SQLEXPRESS;Database=Quotes;Trusted_Connection=True;");
        }
        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Genres>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Genre)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GENRE");

                entity.Property(e => e.Image1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Image2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Image3)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Post>(entity =>
            {
                entity.HasKey(e => e.PostDateTime);

                entity.Property(e => e.PostDateTime).HasColumnType("datetime");

                entity.Property(e => e.LatestPostQuoteId).HasColumnName("LatestPostQuoteID");

                entity.Property(e => e.Picture).HasMaxLength(100);
            });

            modelBuilder.Entity<Quotes>(entity =>
            {
                entity.HasKey(e => e.No)
                    .HasName("PK_Quote");

                entity.Property(e => e.No).ValueGeneratedNever();

                entity.Property(e => e.Author).HasMaxLength(100);

                entity.Property(e => e.Quote)
                    .IsRequired()
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<Stories>(entity =>
            {
                entity.HasKey(e => e.No)
                    .HasName("PK_Stories");

                entity.Property(e => e.No).UseIdentityColumn();
                entity.Property(e => e.Story)
                    .IsRequired();
                entity.Property(e => e.Title).HasMaxLength(200);
                entity.Property(e => e.FileName).HasMaxLength(200);
            });

            modelBuilder.Entity<ChineseVocabulary>(entity =>
            {
                entity.HasKey(e => e.id)
                    .HasName("PK_chinese");

                //entity.Property(e => e.id).UseIdentityColumn();
                entity.Property(e => e.simplified)
                    .IsRequired();
                entity.Property(e => e.traditional).HasMaxLength(4).IsRequired();
                entity.Property(e => e.pinyin_tones).HasMaxLength(25).IsRequired();
                entity.Property(e => e.translation).HasMaxLength(500).IsRequired();
                entity.Property(e => e.translation_indo).HasMaxLength(500);
            });
            modelBuilder.Entity<ChinesePost>(entity =>
            {
                entity.HasKey(e => e.id);

                entity.Property(e => e.LatestPostId).HasColumnName("LatestPostId");

                entity.Property(e => e.Picture).HasMaxLength(100);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}